@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.main__container {
  background: url("/public/piqosity-background.c10fbb54b8a6c182.png");
  background-repeat: no-repeat;
  background-size: cover;
  height: 100vh;
}
.p-component {
  background: white;
  position: unset;
  z-index: unset;
  min-width: unset;
}
.p-multiselect-header {
  color: black;
}
.nav-link.active {
  background-color: aqua;
}
.nav-item button {
  background-color: white;
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  color: black;
  border: unset;
}
.nav-item button:hover {
  color: black;
}
.nav-item button.nav-link.active {
  background-color: #26a29a;

  color: black;
}
.tab-content {
  border-radius: 10px;
}
.groups {
  display: flex;
  margin: 5px;
  padding: 5px;
  flex-wrap: wrap;
}
.groups .group {
  margin: 2px;
  padding: 20px;
  min-height: 16rem;
  background-color: rgb(123, 224, 123);
}
.groups .group .title {
  color: white;
  padding: 0;
  margin-top: 0;
}
.groups .noDrop {
  margin: 2px;
  padding: 20px;
  min-height: 16rem;
  background-color: red;
  cursor: not-allowed !important;
}
.groups .noDrop .title {
  color: white;
  padding: 0;
  margin-top: 0;
}
.item {
  background-color: rgb(1, 48, 5);
  color: white;
  margin: 5px;
  padding: 5px;
  border: 2px green;
  cursor: grab;
}
.notAllowed {
  background-color: yellow;
  color: blue;
  margin: 5px;
  padding: 5px;
  border: 2px green;
  cursor: not-allowed;
}
.p-multiselect {
  border: 1px solid #26a29a;
  padding: 5px;
  border-radius: 10px;
}
.p-multiselect-filter-container {
  padding: 0px;
  border: 1px solid #26a29a;
  border-radius: 10px;
}
.p-checkbox-input {
  color: green;
  border: 1px solid red;
}
.p-checkbox {
  display: flex;
  gap: 3px;
}
.p-multiselect-item {
  color: #26a29a;
}
.p-checkbox-box svg {
  color: gray;
}
.p-multiselect-items {
  padding: 10px;
  display: flex;
  flex-direction: column;
  gap: 5px;
}
.p-multiselect-filter-container svg {
  position: absolute;
  right: 5px;
  color: gray;
}
.p-multiselect-filter {
  outline: #26a29a;
}
.p-multiselect-header {
  padding: 5px;
}
.p-paginator-page {
  /* background-color: #26a29a */
  padding: 10px;
  margin: 10px;
  border-radius: 50%;
  width: 40px;
  height: 40px;
}
.p-highlight {
  background-color: gray;
}
.p-paginator-prev,
.p-paginator-next {
  background-color: teal;
  padding: 10px;
  margin: 10px;
  border-radius: 50%;
  width: 40px;
  height: 40px;
}
.nav .nav-item {
  margin-right: 5px;
}
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000; /* Ensure it's on top of other content */

  /* Apply the blur effect to the background */
  backdrop-filter: blur(5px); /* Adjust blur intensity as needed */
  -webkit-backdrop-filter: blur(5px); /* For Safari compatibility */
}
.modal-content {
  background-color: white;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  overflow-y: scroll;
  white-space: nowrap;
  position: absolute;
  z-index: 1001; /* Ensure modal content is above the overlay */
}
/* 
 <MultiSelect
                                                            value={selectedQuestion[e.id] || []} onChange={(ev) => {
                                                                const selected = ev.value;
                                                                setSelectedQuestion(prev => ({
                                                                    ...prev,
                                                                    [e.id]: selected
                                                                }));
                                                                handleTopics(selected);
                                                            }}
                                                            options={courses_1}
                                                            optionLabel="title"
                                                            optionValue='id'
                                                            placeholder="Select Questions"
                                                            // maxSelectedLabels={3}
                                                            className=" p-3 bg-white w-full border border-gray-400 rounded-lg" />
*/
